// Generated by gencpp from file logger/configure.msg
// DO NOT EDIT!


#ifndef LOGGER_MESSAGE_CONFIGURE_H
#define LOGGER_MESSAGE_CONFIGURE_H

#include <ros/service_traits.h>


#include <logger/configureRequest.h>
#include <logger/configureResponse.h>


namespace logger
{

struct configure
{

typedef configureRequest Request;
typedef configureResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct configure
} // namespace logger


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::logger::configure > {
  static const char* value()
  {
    return "f542eb6b685060352c4ca123dd2b40da";
  }

  static const char* value(const ::logger::configure&) { return value(); }
};

template<>
struct DataType< ::logger::configure > {
  static const char* value()
  {
    return "logger/configure";
  }

  static const char* value(const ::logger::configure&) { return value(); }
};


// service_traits::MD5Sum< ::logger::configureRequest> should match
// service_traits::MD5Sum< ::logger::configure >
template<>
struct MD5Sum< ::logger::configureRequest>
{
  static const char* value()
  {
    return MD5Sum< ::logger::configure >::value();
  }
  static const char* value(const ::logger::configureRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::logger::configureRequest> should match
// service_traits::DataType< ::logger::configure >
template<>
struct DataType< ::logger::configureRequest>
{
  static const char* value()
  {
    return DataType< ::logger::configure >::value();
  }
  static const char* value(const ::logger::configureRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::logger::configureResponse> should match
// service_traits::MD5Sum< ::logger::configure >
template<>
struct MD5Sum< ::logger::configureResponse>
{
  static const char* value()
  {
    return MD5Sum< ::logger::configure >::value();
  }
  static const char* value(const ::logger::configureResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::logger::configureResponse> should match
// service_traits::DataType< ::logger::configure >
template<>
struct DataType< ::logger::configureResponse>
{
  static const char* value()
  {
    return DataType< ::logger::configure >::value();
  }
  static const char* value(const ::logger::configureResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LOGGER_MESSAGE_CONFIGURE_H
