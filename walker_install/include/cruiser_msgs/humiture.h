// Generated by gencpp from file cruiser_msgs/humiture.msg
// DO NOT EDIT!


#ifndef CRUISER_MSGS_MESSAGE_HUMITURE_H
#define CRUISER_MSGS_MESSAGE_HUMITURE_H

#include <ros/service_traits.h>


#include <cruiser_msgs/humitureRequest.h>
#include <cruiser_msgs/humitureResponse.h>


namespace cruiser_msgs
{

struct humiture
{

typedef humitureRequest Request;
typedef humitureResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct humiture
} // namespace cruiser_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::cruiser_msgs::humiture > {
  static const char* value()
  {
    return "f4a4dcb285b63a8cabca03177b46fc2d";
  }

  static const char* value(const ::cruiser_msgs::humiture&) { return value(); }
};

template<>
struct DataType< ::cruiser_msgs::humiture > {
  static const char* value()
  {
    return "cruiser_msgs/humiture";
  }

  static const char* value(const ::cruiser_msgs::humiture&) { return value(); }
};


// service_traits::MD5Sum< ::cruiser_msgs::humitureRequest> should match
// service_traits::MD5Sum< ::cruiser_msgs::humiture >
template<>
struct MD5Sum< ::cruiser_msgs::humitureRequest>
{
  static const char* value()
  {
    return MD5Sum< ::cruiser_msgs::humiture >::value();
  }
  static const char* value(const ::cruiser_msgs::humitureRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::cruiser_msgs::humitureRequest> should match
// service_traits::DataType< ::cruiser_msgs::humiture >
template<>
struct DataType< ::cruiser_msgs::humitureRequest>
{
  static const char* value()
  {
    return DataType< ::cruiser_msgs::humiture >::value();
  }
  static const char* value(const ::cruiser_msgs::humitureRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::cruiser_msgs::humitureResponse> should match
// service_traits::MD5Sum< ::cruiser_msgs::humiture >
template<>
struct MD5Sum< ::cruiser_msgs::humitureResponse>
{
  static const char* value()
  {
    return MD5Sum< ::cruiser_msgs::humiture >::value();
  }
  static const char* value(const ::cruiser_msgs::humitureResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::cruiser_msgs::humitureResponse> should match
// service_traits::DataType< ::cruiser_msgs::humiture >
template<>
struct DataType< ::cruiser_msgs::humitureResponse>
{
  static const char* value()
  {
    return DataType< ::cruiser_msgs::humiture >::value();
  }
  static const char* value(const ::cruiser_msgs::humitureResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CRUISER_MSGS_MESSAGE_HUMITURE_H
