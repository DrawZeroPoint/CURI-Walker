// Generated by gencpp from file cruiser_msgs/cruiserSensorAction.msg
// DO NOT EDIT!


#ifndef CRUISER_MSGS_MESSAGE_CRUISERSENSORACTION_H
#define CRUISER_MSGS_MESSAGE_CRUISERSENSORACTION_H

#include <ros/service_traits.h>


#include <cruiser_msgs/cruiserSensorActionRequest.h>
#include <cruiser_msgs/cruiserSensorActionResponse.h>


namespace cruiser_msgs
{

struct cruiserSensorAction
{

typedef cruiserSensorActionRequest Request;
typedef cruiserSensorActionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct cruiserSensorAction
} // namespace cruiser_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::cruiser_msgs::cruiserSensorAction > {
  static const char* value()
  {
    return "dfcebdc80a8b049e6a92382d5d1f31d8";
  }

  static const char* value(const ::cruiser_msgs::cruiserSensorAction&) { return value(); }
};

template<>
struct DataType< ::cruiser_msgs::cruiserSensorAction > {
  static const char* value()
  {
    return "cruiser_msgs/cruiserSensorAction";
  }

  static const char* value(const ::cruiser_msgs::cruiserSensorAction&) { return value(); }
};


// service_traits::MD5Sum< ::cruiser_msgs::cruiserSensorActionRequest> should match
// service_traits::MD5Sum< ::cruiser_msgs::cruiserSensorAction >
template<>
struct MD5Sum< ::cruiser_msgs::cruiserSensorActionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::cruiser_msgs::cruiserSensorAction >::value();
  }
  static const char* value(const ::cruiser_msgs::cruiserSensorActionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::cruiser_msgs::cruiserSensorActionRequest> should match
// service_traits::DataType< ::cruiser_msgs::cruiserSensorAction >
template<>
struct DataType< ::cruiser_msgs::cruiserSensorActionRequest>
{
  static const char* value()
  {
    return DataType< ::cruiser_msgs::cruiserSensorAction >::value();
  }
  static const char* value(const ::cruiser_msgs::cruiserSensorActionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::cruiser_msgs::cruiserSensorActionResponse> should match
// service_traits::MD5Sum< ::cruiser_msgs::cruiserSensorAction >
template<>
struct MD5Sum< ::cruiser_msgs::cruiserSensorActionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::cruiser_msgs::cruiserSensorAction >::value();
  }
  static const char* value(const ::cruiser_msgs::cruiserSensorActionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::cruiser_msgs::cruiserSensorActionResponse> should match
// service_traits::DataType< ::cruiser_msgs::cruiserSensorAction >
template<>
struct DataType< ::cruiser_msgs::cruiserSensorActionResponse>
{
  static const char* value()
  {
    return DataType< ::cruiser_msgs::cruiserSensorAction >::value();
  }
  static const char* value(const ::cruiser_msgs::cruiserSensorActionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CRUISER_MSGS_MESSAGE_CRUISERSENSORACTION_H
