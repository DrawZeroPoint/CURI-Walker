; Auto-generated. Do not edit!


(cl:in-package ces_task-msg)


;//! \htmlinclude TaskLegStatus.msg.html

(cl:defclass <TaskLegStatus> (roslisp-msg-protocol:ros-message)
  ((header
    :reader header
    :initarg :header
    :type std_msgs-msg:Header
    :initform (cl:make-instance 'std_msgs-msg:Header))
   (task_id
    :reader task_id
    :initarg :task_id
    :type cl:string
    :initform "")
   (demander
    :reader demander
    :initarg :demander
    :type cl:string
    :initform "")
   (executor
    :reader executor
    :initarg :executor
    :type cl:string
    :initform "")
   (task_status
    :reader task_status
    :initarg :task_status
    :type cl:string
    :initform "")
   (legs_status
    :reader legs_status
    :initarg :legs_status
    :type cl:string
    :initform "")
   (process_info
    :reader process_info
    :initarg :process_info
    :type cl:string
    :initform ""))
)

(cl:defclass TaskLegStatus (<TaskLegStatus>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <TaskLegStatus>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'TaskLegStatus)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name ces_task-msg:<TaskLegStatus> is deprecated: use ces_task-msg:TaskLegStatus instead.")))

(cl:ensure-generic-function 'header-val :lambda-list '(m))
(cl:defmethod header-val ((m <TaskLegStatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader ces_task-msg:header-val is deprecated.  Use ces_task-msg:header instead.")
  (header m))

(cl:ensure-generic-function 'task_id-val :lambda-list '(m))
(cl:defmethod task_id-val ((m <TaskLegStatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader ces_task-msg:task_id-val is deprecated.  Use ces_task-msg:task_id instead.")
  (task_id m))

(cl:ensure-generic-function 'demander-val :lambda-list '(m))
(cl:defmethod demander-val ((m <TaskLegStatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader ces_task-msg:demander-val is deprecated.  Use ces_task-msg:demander instead.")
  (demander m))

(cl:ensure-generic-function 'executor-val :lambda-list '(m))
(cl:defmethod executor-val ((m <TaskLegStatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader ces_task-msg:executor-val is deprecated.  Use ces_task-msg:executor instead.")
  (executor m))

(cl:ensure-generic-function 'task_status-val :lambda-list '(m))
(cl:defmethod task_status-val ((m <TaskLegStatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader ces_task-msg:task_status-val is deprecated.  Use ces_task-msg:task_status instead.")
  (task_status m))

(cl:ensure-generic-function 'legs_status-val :lambda-list '(m))
(cl:defmethod legs_status-val ((m <TaskLegStatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader ces_task-msg:legs_status-val is deprecated.  Use ces_task-msg:legs_status instead.")
  (legs_status m))

(cl:ensure-generic-function 'process_info-val :lambda-list '(m))
(cl:defmethod process_info-val ((m <TaskLegStatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader ces_task-msg:process_info-val is deprecated.  Use ces_task-msg:process_info instead.")
  (process_info m))
(cl:defmethod roslisp-msg-protocol:symbol-codes ((msg-type (cl:eql '<TaskLegStatus>)))
    "Constants for message type '<TaskLegStatus>"
  '((:OWNER_NONE . none)
    (:OWNER_SDK . sdk)
    (:OWNER_LEGS . legs)
    (:OWNER_ARMS . arms)
    (:OWNER_REMOTER . remoter)
    (:OWNER_HOST . host)
    (:TASK_NAV2CENTER . nav2Center)
    (:TASK_NAV2GATE . nav2Gate)
    (:TASK_NAV2GETBAG . nav2GetBag)
    (:TASK_NAV2HANGBAG . nav2HangBag)
    (:TASK_NAV2DANCE . nav2Dance)
    (:TASK_NAV2WATER . nav2GetWater)
    (:TASK_NAV2FOOD . nav2Food)
    (:TASK_NAV2SOFA . nav2Sofa)
    (:TASK_NAV2NOTICEDATE . nav2NoticeDate)
    (:TASK_NAV2UMBRELLA . nav2Umbrella)
    (:TASK_NAV2GIVEUMBRELLA . nav2GiveUmbrella)
    (:TASK_NAV2CHARGE . nav2Charge)
    (:TASK_NAV2ENDPOINT . nav2Endpoint)
    (:TASK_NAV2DRAW . nav2Draw)
    (:TASK_FASTWALK . doFastwalk)
    (:TASK_MARKTIME . markTime)
    (:TASK_STANDBY . standby)
    (:TASK_DANCE . dance)
    (:TASK_STATUS_IDLE . idle)
    (:TASK_STATUS_BUSY . busy)
    (:TASK_STATUS_STOP . stopped)
    (:TASK_STATUS_ABORT . abort)
    (:TASK_STATUS_FAILED . fail)
    (:LEG_STATUS_INIT . standInit)
    (:LEG_STATUS_STANDING . standing)
    (:LEG_STATUS_SCRIPTING . scripting)
    (:LEG_STATUS_NAV . navigating)
    (:LEG_STATUS_ARMCTRL . armCtrl)
    (:LEG_STATUS_VISIONCTRL . visionCtrl)
    (:LEG_STATUS_KEYBOARDCTRL . keyboardCtrl)
    (:LEG_STATUS_REMOTERCTRL . remoterCtrl))
)
(cl:defmethod roslisp-msg-protocol:symbol-codes ((msg-type (cl:eql 'TaskLegStatus)))
    "Constants for message type 'TaskLegStatus"
  '((:OWNER_NONE . none)
    (:OWNER_SDK . sdk)
    (:OWNER_LEGS . legs)
    (:OWNER_ARMS . arms)
    (:OWNER_REMOTER . remoter)
    (:OWNER_HOST . host)
    (:TASK_NAV2CENTER . nav2Center)
    (:TASK_NAV2GATE . nav2Gate)
    (:TASK_NAV2GETBAG . nav2GetBag)
    (:TASK_NAV2HANGBAG . nav2HangBag)
    (:TASK_NAV2DANCE . nav2Dance)
    (:TASK_NAV2WATER . nav2GetWater)
    (:TASK_NAV2FOOD . nav2Food)
    (:TASK_NAV2SOFA . nav2Sofa)
    (:TASK_NAV2NOTICEDATE . nav2NoticeDate)
    (:TASK_NAV2UMBRELLA . nav2Umbrella)
    (:TASK_NAV2GIVEUMBRELLA . nav2GiveUmbrella)
    (:TASK_NAV2CHARGE . nav2Charge)
    (:TASK_NAV2ENDPOINT . nav2Endpoint)
    (:TASK_NAV2DRAW . nav2Draw)
    (:TASK_FASTWALK . doFastwalk)
    (:TASK_MARKTIME . markTime)
    (:TASK_STANDBY . standby)
    (:TASK_DANCE . dance)
    (:TASK_STATUS_IDLE . idle)
    (:TASK_STATUS_BUSY . busy)
    (:TASK_STATUS_STOP . stopped)
    (:TASK_STATUS_ABORT . abort)
    (:TASK_STATUS_FAILED . fail)
    (:LEG_STATUS_INIT . standInit)
    (:LEG_STATUS_STANDING . standing)
    (:LEG_STATUS_SCRIPTING . scripting)
    (:LEG_STATUS_NAV . navigating)
    (:LEG_STATUS_ARMCTRL . armCtrl)
    (:LEG_STATUS_VISIONCTRL . visionCtrl)
    (:LEG_STATUS_KEYBOARDCTRL . keyboardCtrl)
    (:LEG_STATUS_REMOTERCTRL . remoterCtrl))
)
(cl:defmethod roslisp-msg-protocol:serialize ((msg <TaskLegStatus>) ostream)
  "Serializes a message object of type '<TaskLegStatus>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'header) ostream)
  (cl:let ((__ros_str_len (cl:length (cl:slot-value msg 'task_id))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_str_len) ostream))
  (cl:map cl:nil #'(cl:lambda (c) (cl:write-byte (cl:char-code c) ostream)) (cl:slot-value msg 'task_id))
  (cl:let ((__ros_str_len (cl:length (cl:slot-value msg 'demander))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_str_len) ostream))
  (cl:map cl:nil #'(cl:lambda (c) (cl:write-byte (cl:char-code c) ostream)) (cl:slot-value msg 'demander))
  (cl:let ((__ros_str_len (cl:length (cl:slot-value msg 'executor))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_str_len) ostream))
  (cl:map cl:nil #'(cl:lambda (c) (cl:write-byte (cl:char-code c) ostream)) (cl:slot-value msg 'executor))
  (cl:let ((__ros_str_len (cl:length (cl:slot-value msg 'task_status))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_str_len) ostream))
  (cl:map cl:nil #'(cl:lambda (c) (cl:write-byte (cl:char-code c) ostream)) (cl:slot-value msg 'task_status))
  (cl:let ((__ros_str_len (cl:length (cl:slot-value msg 'legs_status))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_str_len) ostream))
  (cl:map cl:nil #'(cl:lambda (c) (cl:write-byte (cl:char-code c) ostream)) (cl:slot-value msg 'legs_status))
  (cl:let ((__ros_str_len (cl:length (cl:slot-value msg 'process_info))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_str_len) ostream))
  (cl:map cl:nil #'(cl:lambda (c) (cl:write-byte (cl:char-code c) ostream)) (cl:slot-value msg 'process_info))
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <TaskLegStatus>) istream)
  "Deserializes a message object of type '<TaskLegStatus>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'header) istream)
    (cl:let ((__ros_str_len 0))
      (cl:setf (cl:ldb (cl:byte 8 0) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:slot-value msg 'task_id) (cl:make-string __ros_str_len))
      (cl:dotimes (__ros_str_idx __ros_str_len msg)
        (cl:setf (cl:char (cl:slot-value msg 'task_id) __ros_str_idx) (cl:code-char (cl:read-byte istream)))))
    (cl:let ((__ros_str_len 0))
      (cl:setf (cl:ldb (cl:byte 8 0) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:slot-value msg 'demander) (cl:make-string __ros_str_len))
      (cl:dotimes (__ros_str_idx __ros_str_len msg)
        (cl:setf (cl:char (cl:slot-value msg 'demander) __ros_str_idx) (cl:code-char (cl:read-byte istream)))))
    (cl:let ((__ros_str_len 0))
      (cl:setf (cl:ldb (cl:byte 8 0) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:slot-value msg 'executor) (cl:make-string __ros_str_len))
      (cl:dotimes (__ros_str_idx __ros_str_len msg)
        (cl:setf (cl:char (cl:slot-value msg 'executor) __ros_str_idx) (cl:code-char (cl:read-byte istream)))))
    (cl:let ((__ros_str_len 0))
      (cl:setf (cl:ldb (cl:byte 8 0) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:slot-value msg 'task_status) (cl:make-string __ros_str_len))
      (cl:dotimes (__ros_str_idx __ros_str_len msg)
        (cl:setf (cl:char (cl:slot-value msg 'task_status) __ros_str_idx) (cl:code-char (cl:read-byte istream)))))
    (cl:let ((__ros_str_len 0))
      (cl:setf (cl:ldb (cl:byte 8 0) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:slot-value msg 'legs_status) (cl:make-string __ros_str_len))
      (cl:dotimes (__ros_str_idx __ros_str_len msg)
        (cl:setf (cl:char (cl:slot-value msg 'legs_status) __ros_str_idx) (cl:code-char (cl:read-byte istream)))))
    (cl:let ((__ros_str_len 0))
      (cl:setf (cl:ldb (cl:byte 8 0) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:slot-value msg 'process_info) (cl:make-string __ros_str_len))
      (cl:dotimes (__ros_str_idx __ros_str_len msg)
        (cl:setf (cl:char (cl:slot-value msg 'process_info) __ros_str_idx) (cl:code-char (cl:read-byte istream)))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<TaskLegStatus>)))
  "Returns string type for a message object of type '<TaskLegStatus>"
  "ces_task/TaskLegStatus")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'TaskLegStatus)))
  "Returns string type for a message object of type 'TaskLegStatus"
  "ces_task/TaskLegStatus")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<TaskLegStatus>)))
  "Returns md5sum for a message object of type '<TaskLegStatus>"
  "bad847b3c04a60d5d22c49c56407a7be")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'TaskLegStatus)))
  "Returns md5sum for a message object of type 'TaskLegStatus"
  "bad847b3c04a60d5d22c49c56407a7be")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<TaskLegStatus>)))
  "Returns full string definition for message of type '<TaskLegStatus>"
  (cl:format cl:nil "# owner ids~%string OWNER_NONE=none~%string OWNER_SDK=sdk~%string OWNER_LEGS=legs~%string OWNER_ARMS=arms~%string OWNER_REMOTER=remoter~%string OWNER_HOST=host~%~%# task ids~%## tasks for legs~%string TASK_NAV2CENTER=nav2Center~%string TASK_NAV2GATE=nav2Gate~%string TASK_NAV2GETBAG=nav2GetBag~%string TASK_NAV2HangBAG=nav2HangBag~%string TASK_NAV2DANCE=nav2Dance~%string TASK_NAV2WATER=nav2GetWater~%string TASK_NAV2FOOD=nav2Food~%string TASK_NAV2SOFA=nav2Sofa~%string TASK_NAV2NoticeDate=nav2NoticeDate~%string TASK_NAV2UMBRELLA=nav2Umbrella~%string TASK_NAV2GIVEUMBRELLA=nav2GiveUmbrella~%string TASK_NAV2CHARGE=nav2Charge~%string TASK_NAV2ENDPOINT=nav2Endpoint~%string TASK_NAV2DRAW=nav2Draw~%string TASK_FASTWALK=doFastwalk~%string TASK_MARKTIME=markTime~%string TASK_STANDBY=standby~%string TASK_DANCE=dance~%~%# task status defines~%string TASK_STATUS_IDLE=idle~%string TASK_STATUS_BUSY=busy~%string TASK_STATUS_STOP=stopped~%string TASK_STATUS_ABORT=abort~%string TASK_STATUS_FAILED=fail~%~%# legs status defines~%string LEG_STATUS_INIT=standInit~%string LEG_STATUS_STANDING=standing~%string LEG_STATUS_SCRIPTING=scripting~%string LEG_STATUS_NAV=navigating~%string LEG_STATUS_ARMCTRL=armCtrl~%string LEG_STATUS_VISIONCTRL=visionCtrl~%string LEG_STATUS_KEYBOARDCTRL=keyboardCtrl~%string LEG_STATUS_REMOTERCTRL=remoterCtrl~%~%##############################################~%~%# time stamp must be filled~%Header header~%~%# current task id~%string task_id~%~%# who send request~%string demander~%~%# who execute task~%string executor~%~%# current task status~%string task_status~%~%# current leg status~%string legs_status~%~%# progress info(optional)~%string process_info~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'TaskLegStatus)))
  "Returns full string definition for message of type 'TaskLegStatus"
  (cl:format cl:nil "# owner ids~%string OWNER_NONE=none~%string OWNER_SDK=sdk~%string OWNER_LEGS=legs~%string OWNER_ARMS=arms~%string OWNER_REMOTER=remoter~%string OWNER_HOST=host~%~%# task ids~%## tasks for legs~%string TASK_NAV2CENTER=nav2Center~%string TASK_NAV2GATE=nav2Gate~%string TASK_NAV2GETBAG=nav2GetBag~%string TASK_NAV2HangBAG=nav2HangBag~%string TASK_NAV2DANCE=nav2Dance~%string TASK_NAV2WATER=nav2GetWater~%string TASK_NAV2FOOD=nav2Food~%string TASK_NAV2SOFA=nav2Sofa~%string TASK_NAV2NoticeDate=nav2NoticeDate~%string TASK_NAV2UMBRELLA=nav2Umbrella~%string TASK_NAV2GIVEUMBRELLA=nav2GiveUmbrella~%string TASK_NAV2CHARGE=nav2Charge~%string TASK_NAV2ENDPOINT=nav2Endpoint~%string TASK_NAV2DRAW=nav2Draw~%string TASK_FASTWALK=doFastwalk~%string TASK_MARKTIME=markTime~%string TASK_STANDBY=standby~%string TASK_DANCE=dance~%~%# task status defines~%string TASK_STATUS_IDLE=idle~%string TASK_STATUS_BUSY=busy~%string TASK_STATUS_STOP=stopped~%string TASK_STATUS_ABORT=abort~%string TASK_STATUS_FAILED=fail~%~%# legs status defines~%string LEG_STATUS_INIT=standInit~%string LEG_STATUS_STANDING=standing~%string LEG_STATUS_SCRIPTING=scripting~%string LEG_STATUS_NAV=navigating~%string LEG_STATUS_ARMCTRL=armCtrl~%string LEG_STATUS_VISIONCTRL=visionCtrl~%string LEG_STATUS_KEYBOARDCTRL=keyboardCtrl~%string LEG_STATUS_REMOTERCTRL=remoterCtrl~%~%##############################################~%~%# time stamp must be filled~%Header header~%~%# current task id~%string task_id~%~%# who send request~%string demander~%~%# who execute task~%string executor~%~%# current task status~%string task_status~%~%# current leg status~%string legs_status~%~%# progress info(optional)~%string process_info~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <TaskLegStatus>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'header))
     4 (cl:length (cl:slot-value msg 'task_id))
     4 (cl:length (cl:slot-value msg 'demander))
     4 (cl:length (cl:slot-value msg 'executor))
     4 (cl:length (cl:slot-value msg 'task_status))
     4 (cl:length (cl:slot-value msg 'legs_status))
     4 (cl:length (cl:slot-value msg 'process_info))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <TaskLegStatus>))
  "Converts a ROS message object to a list"
  (cl:list 'TaskLegStatus
    (cl:cons ':header (header msg))
    (cl:cons ':task_id (task_id msg))
    (cl:cons ':demander (demander msg))
    (cl:cons ':executor (executor msg))
    (cl:cons ':task_status (task_status msg))
    (cl:cons ':legs_status (legs_status msg))
    (cl:cons ':process_info (process_info msg))
))
